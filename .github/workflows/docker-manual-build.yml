# Manual workflow for building individual Docker images

name: Manual Docker Build

on:
  workflow_dispatch:
    inputs:
      container:
        description: 'Container to build'
        required: true
        default: 'assets-service'
        type: choice
        options:
          - connectors
          - database-init
          - all
      tag:
        description: 'Custom tag (optional)'
        required: false
        type: string
      push:
        description: 'Push to registry'
        required: true
        default: true
        type: boolean

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-specific:
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.container != 'all' }}
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        if: ${{ github.event.inputs.push == 'true' }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set container config
        id: config
        run: |
          case "${{ github.event.inputs.container }}" in
            "connectors")
              echo "dockerfile=container/Containerfile.connectors" >> $GITHUB_OUTPUT
              echo "suffix=-connectors" >> $GITHUB_OUTPUT
              ;;
            "database-init")
              echo "dockerfile=container/Containerfile.database-init" >> $GITHUB_OUTPUT
              echo "suffix=-database-init" >> $GITHUB_OUTPUT
              ;;
          esac

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}${{ steps.config.outputs.suffix }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=ref,event=tag
            type=raw,value=latest,enable={{is_default_branch}}
            type=raw,value=${{ github.event.inputs.tag }},enable=${{ github.event.inputs.tag != '' }}
            type=raw,value=manual-{{date 'YYYYMMDD-HHmmss'}}

      - name: Build and push ${{ github.event.inputs.container }} image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ${{ steps.config.outputs.dockerfile }}
          push: ${{ github.event.inputs.push == 'true' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build-all:
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.container == 'all' }}
    permissions:
      contents: read
      packages: write

    strategy:
      matrix:
        include:
          - name: connectors
            dockerfile: container/Containerfile.connectors
            suffix: "-connectors"
          - name: database-init
            dockerfile: container/Containerfile.database-init
            suffix: "-database-init"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        if: ${{ github.event.inputs.push == 'true' }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}${{ matrix.suffix }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=ref,event=tag
            type=raw,value=latest,enable={{is_default_branch}}
            type=raw,value=${{ github.event.inputs.tag }},enable=${{ github.event.inputs.tag != '' }}
            type=raw,value=manual-{{date 'YYYYMMDD-HHmmss'}}

      - name: Build and push ${{ matrix.name }} image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          push: ${{ github.event.inputs.push == 'true' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
